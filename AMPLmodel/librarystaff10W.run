# -----------------------------------
# Run file
# -----------------------------------

# Master Thesis: Work Distribution of a Heterogeneous Library Staff - A Personnel Task Scheduling Problem
# Master Students: Claes Arvidson and Emelie Karlsson
# First version: 2016-02-09

reset;                  
option solver cplexamp;    # Choose solver
option presolve 0;
option omit_zero_cols 1;   # No zeros printed in columns
option omit_zero_rows 1;   # No zeros printed in rows
option display_1col 10000; # Only one column printed
option cplex_options "timing 1 mipdisplay 2 time = 57600"; # Time measurement and printing. NOTE: Time = x means the solve breaks after x seconds. 57600 secounds = 17->9
option display_precision 5;

model librarystaff10W.mod;   # Read model file 
data librarystaff10W.dat;    # Read data file 

#expand > librarystaff.res; # Writes all results to file

############################## Add timer parameters #########################
param time_elapsed;
param end;
let time_elapsed := _ampl_time + _total_solve_elapsed_time;



################################# Solve ####################################
solve;




##################### Display number of shift changes ########################
param shift_change;

let shift_change := sum{i in I}(sum{w in 1..9}(sum{w_prim in (w+1)..10}(sum{d in 1..5}(sum{s in 1..3} abs(y[i,w,d,s]-y[i,w_prim,d,s])))));

printf "\n The number of shiftchanges in total were: %d \n \n", shift_change;




###################### Print number of shifts each worker is assigned #####################
param number_of_workers := 39;
let Workers := 1..number_of_workers;

#Loop for the lists{Workers}
for {i in I}
{
	let Shift_list[i] := sum{w in W}(sum{d in D}(sum{s in S[d]}(sum{j in J[d]} x[i,w,d,s,j])))/10;
	let LOW_list[i] := sum{w in W}(sum{d in 1..5}(sum{s in S[d]} x[i,w,d,s,'LOW'] ));
	let PL_list[i] := sum{w in W}(sum{d in 1..5}(sum{s in S[d]} x[i,w,d,s,'PL'] ));
}
display Shift_list, LOW_list, PL_list;


###################### Print number of LOW shifts each person has per ten weeks #####################
#param number_of_lows;
#for {i in I}
#{
#	
#}



###################### Print number of stand-ins each day #####################

#for {i in I, w in W, d in 1..5}
#{
#	if sum{s in 1..3} avail[i,w,d,s] >= 1 && sum{s in 1..3}(sum{j in J[d]} x[i,w,d,s,j]) = 0 then
#	{
#		let stand_in_day_d[i,w,d] := 1;
#	}
#	else
#	{
#		let stand_in_day_d[i,w,d] := 0;
#	}
#}


########################## Display of variables ###############################
#display lowest_stand_in_amount;
display lowest_stand_in_amount_lib;
display lowest_stand_in_amount_ass;
#display stand_in_day_d;
#display working_friday_evening;
#display shifts_that_differ_between_weeks;
# Print in terminal of objective function value (inactive)
#display cost;
#display y1;
#display y2;
#display y3;
#display x;

#Utskrift av villkor, tex slack
#display villkorsnamn.slack;

### display the variables ###
display _varname, _var > librarystaff10W.res;
for {i in I}
{
	printf "Shift_list[%d] = %f \n", i, Shift_list[i] > librarystaff10W.res;
}
for {i in I}
{
	printf "LOW_list[%d] = %f \n", i, LOW_list[i] > librarystaff10W.res;
}
for {i in I}
{
	printf "PL_list[%d] = %f \n", i, PL_list[i] > librarystaff10W.res;
}

#display Shift_list > librarystaff10W.res;
#display LOW_list > librarystaff10W.res;
#display PL_list > librarystaff10W.res;

#display task_worker_demand;
###############################################################################
